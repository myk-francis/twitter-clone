import { type NextPage } from "next";
import Head from "next/head";
// import Link from "next/link";
import { api } from "~/utils/api";
import { SignOutButton, useUser, SignInButton } from "@clerk/nextjs";
import Image from "next/image";
import type { RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  console.log(user);

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile Picture"
        className="rounded-full"
        width={50}
        height={50}
      />
      <input
        type="text"
        placeholder="Type some emojis"
        className="grow bg-transparent"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.profilePicture}
        alt="Profile Picture"
        className="rounded-full"
        width={50}
        height={50}
      />
      <div className="flex flex-col">
        <div className="flex gap-3">
          <span className="font-bold text-slate-300">@{author.firstName}</span>
          <span className="font-thin text-slate-300">
            .{`${dayjs(post.createdAt).fromNow()}`}
          </span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const { data, isLoading } = api.posts.getAll.useQuery();

  const user = useUser();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong!!!</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-200 p-4">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {!!user.isSignedIn && (
              <div>
                <CreatePostWizard />
              </div>
            )}
          </div>
          <div className="flex flex-col">
            {data?.map(({ post, author }) => (
              <PostView key={post.id} post={post} author={author} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
